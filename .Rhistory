} else return(c(0, 0 ,0))
#if((backtest.data.by.stock[, 'IWM'] < 0) & (backtest.data.by.stock[, 'SPY'] < 0)){
#  result <- c(0, 0, 1)
#} else if(backtest.data.by.stock[, 'SPY'] < backtest.data.by.stock[, 'IWM']){
#  result <- c(1, 0, 0)
#} else{
#  result <- c(0, 1, 0)
#}
#return(result)
}
{
periods.best <- c(3530, 4416, 4428)
holding.period.best <- 1819
pnl.best <- base.strategy(periods = periods.best, holding.period = holding.period.best)
sharpe.best <- sharpe_fun(pnl.best[(max(periods.best) + 2):length(pnl.best)])
nav.best <- portfolio.value(money, pnl.best)[(max(periods.best) + 2):length(pnl.best)]
plot(nav.best, type = 'l')
print(sprintf('Periods = %s, holding.period = %s', paste(periods.best, collapse = ', '), holding.period.best))
print(sprintf('Sharpe = %s', sharpe.best))
}
# Переопределяю функцию подбора весов
getWeights_2 <- function(data, periods) {
backtest.data.by.stock <- lapply(1:dim(data)[2], function(stock) {
stock.batch.data <- lapply(periods, function(period) {
period.batch.data <- data[, stock]
period.batch.lenght <- length(period.batch.data)
period.batch <- (period.batch.data[period.batch.lenght] / period.batch.data[period.batch.lenght - period]) - 1
return(period.batch)
})
stock.batch.data <- do.call(cbind, stock.batch.data)
stock.batch <- apply(stock.batch.data, 1, mean)
return(stock.batch)
})
backtest.data.by.stock <- do.call(cbind, backtest.data.by.stock)
backtest.data.by.stock <- set_colnames(backtest.data.by.stock, stocks)
# Если есть активы с положительной доходностью
# Выбираем актив с максимальной доходностью
if (length(backtest.data.by.stock[backtest.data.by.stock > 0]) > 0) {
result <- ifelse(1:length(stocks) %in% which(backtest.data.by.stock > 0), 1, 0)
result <- result / length(result[result == 1])
return(result)
} else return(c(0, 0 ,0))
#if((backtest.data.by.stock[, 'IWM'] < 0) & (backtest.data.by.stock[, 'SPY'] < 0)){
#  result <- c(0, 0, 1)
#} else if(backtest.data.by.stock[, 'SPY'] < backtest.data.by.stock[, 'IWM']){
#  result <- c(1, 0, 0)
#} else{
#  result <- c(0, 1, 0)
#}
#return(result)
}
{
periods.best <- c(3530, 4416, 4428)
holding.period.best <- 1819
pnl.best <- base.strategy(periods = periods.best, holding.period = holding.period.best)
sharpe.best <- sharpe_fun(pnl.best[(max(periods.best) + 2):length(pnl.best)])
nav.best <- portfolio.value(money, pnl.best)[(max(periods.best) + 2):length(pnl.best)]
plot(nav.best, type = 'l')
print(sprintf('Periods = %s, holding.period = %s', paste(periods.best, collapse = ', '), holding.period.best))
print(sprintf('Sharpe = %s', sharpe.best))
}
{
periods.best <- periods#c(3530, 4416, 4428)
holding.period.best <- holding.period#1819
pnl.best <- base.strategy(periods = periods.best, holding.period = holding.period.best)
sharpe.best <- sharpe_fun(pnl.best[(max(periods.best) + 2):length(pnl.best)])
nav.best <- portfolio.value(money, pnl.best)[(max(periods.best) + 2):length(pnl.best)]
plot(nav.best, type = 'l')
print(sprintf('Periods = %s, holding.period = %s', paste(periods.best, collapse = ', '), holding.period.best))
print(sprintf('Sharpe = %s', sharpe.best))
}
max.value <- floor(dim(backtest.data)[1] * 5)
repeat {
holding.period.temp <- sample(1:max.value, 1)
periods.temp <- sort(c(sample(1:max.value, 1), sample(1:max.value, 1), sample(1:max.value, 1)))
pnl.full <- base.strategy(periods = periods.temp, holding.period = holding.period.temp)
loockback.indent <- max(periods.temp) + 2
pnl.lookback <- pnl.full[loockback.indent:length(pnl.full)]
sharpe <- sharpe_fun(pnl.lookback)
if (sharpe >= 0.5 || is.na(sharpe)) {
print(sprintf('Periods = %s, holding.period = %s', paste(periods.temp, collapse = ', '), holding.period.temp))
print(sprintf('Sharpe = %s', sharpe))
break
}
}
max.value <- floor(dim(backtest.data)[1] * 0.5)
repeat {
holding.period.temp <- sample(1:max.value, 1)
periods.temp <- sort(c(sample(1:max.value, 1), sample(1:max.value, 1), sample(1:max.value, 1)))
pnl.full <- base.strategy(periods = periods.temp, holding.period = holding.period.temp)
loockback.indent <- max(periods.temp) + 2
pnl.lookback <- pnl.full[loockback.indent:length(pnl.full)]
sharpe <- sharpe_fun(pnl.lookback)
if (sharpe >= 0.5 || is.na(sharpe)) {
print(sprintf('Periods = %s, holding.period = %s', paste(periods.temp, collapse = ', '), holding.period.temp))
print(sprintf('Sharpe = %s', sharpe))
break
}
}
repeat {
holding.period.temp <- sample(1:max.value, 1)
periods.temp <- sort(c(sample(1:max.value, 1), sample(1:max.value, 1), sample(1:max.value, 1)))
pnl.full <- base.strategy(periods = periods.temp, holding.period = holding.period.temp)
loockback.indent <- max(periods.temp) + 2
pnl.lookback <- pnl.full[loockback.indent:length(pnl.full)]
sharpe <- sharpe_fun(pnl.lookback)
if (sharpe >= 0.8 || is.na(sharpe)) {
print(sprintf('Periods = %s, holding.period = %s', paste(periods.temp, collapse = ', '), holding.period.temp))
print(sprintf('Sharpe = %s', sharpe))
break
}
}
repeat {
holding.period.temp <- sample(1:max.value, 1)
periods.temp <- sort(c(sample(1:max.value, 1), sample(1:max.value, 1), sample(1:max.value, 1)))
pnl.full <- base.strategy(periods = periods.temp, holding.period = holding.period.temp)
loockback.indent <- max(periods.temp) + 2
pnl.lookback <- pnl.full[loockback.indent:length(pnl.full)]
sharpe <- sharpe_fun(pnl.lookback)
if (sharpe >= 1 || is.na(sharpe)) {
print(sprintf('Periods = %s, holding.period = %s', paste(periods.temp, collapse = ', '), holding.period.temp))
print(sprintf('Sharpe = %s', sharpe))
break
}
}
# Переопределяю функцию подбора весов
getWeights_2 <- function(data, periods) {
backtest.data.by.stock <- lapply(1:dim(data)[2], function(stock) {
stock.batch.data <- lapply(periods, function(period) {
period.batch.data <- data[, stock]
period.batch.lenght <- length(period.batch.data)
period.batch <- (period.batch.data[period.batch.lenght] / period.batch.data[period.batch.lenght - period]) - 1
return(period.batch)
})
stock.batch.data <- do.call(cbind, stock.batch.data)
stock.batch <- apply(stock.batch.data, 1, mean)
return(stock.batch)
})
backtest.data.by.stock <- do.call(cbind, backtest.data.by.stock)
backtest.data.by.stock <- set_colnames(backtest.data.by.stock, stocks)
# Если есть активы с положительной доходностью
# Выбираем актив с максимальной доходностью
if (length(backtest.data.by.stock[backtest.data.by.stock > 0]) > 0) {
result <- ifelse(1:length(stocks) %in% which(backtest.data.by.stock > 0), 1, 0)
result <- result / length(result[result == 1])
} else if ((backtest.data.by.stock[, 'IWM'] < 0) & (backtest.data.by.stock[, 'SPY'] < 0)) {
result <- c(0, 0, 1)
} else if (backtest.data.by.stock[, 'SPY'] < backtest.data.by.stock[, 'IWM']) {
result <- c(1, 0, 0)
} else {
result <- c(0, 1, 0)
}
return(result)
}
max.value <- floor(dim(backtest.data)[1] * 0.5)
repeat {
holding.period.temp <- sample(1:max.value, 1)
periods.temp <- sort(c(sample(1:max.value, 1), sample(1:max.value, 1), sample(1:max.value, 1)))
pnl.full <- base.strategy(periods = periods.temp, holding.period = holding.period.temp)
loockback.indent <- max(periods.temp) + 2
pnl.lookback <- pnl.full[loockback.indent:length(pnl.full)]
sharpe <- sharpe_fun(pnl.lookback)
if (sharpe >= 1 || is.na(sharpe)) {
print(sprintf('Periods = %s, holding.period = %s', paste(periods.temp, collapse = ', '), holding.period.temp))
print(sprintf('Sharpe = %s', sharpe))
break
}
}
{
periods.best <- periods#c(3530, 4416, 4428)
holding.period.best <- holding.period#1819
pnl.best <- base.strategy(periods = periods.best, holding.period = holding.period.best)
sharpe.best <- sharpe_fun(pnl.best[(max(periods.best) + 2):length(pnl.best)])
nav.best <- portfolio.value(money, pnl.best)[(max(periods.best) + 2):length(pnl.best)]
plot(nav.best, type = 'l')
print(sprintf('Periods = %s, holding.period = %s', paste(periods.best, collapse = ', '), holding.period.best))
print(sprintf('Sharpe = %s', sharpe.best))
}
{
periods.best <-  c(79, 1449, 1603)#periods#c(3530, 4416, 4428)
holding.period.best <- 66#holding.period#1819
pnl.best <- base.strategy(periods = periods.best, holding.period = holding.period.best)
sharpe.best <- sharpe_fun(pnl.best[(max(periods.best) + 2):length(pnl.best)])
nav.best <- portfolio.value(money, pnl.best)[(max(periods.best) + 2):length(pnl.best)]
plot(nav.best, type = 'l')
print(sprintf('Periods = %s, holding.period = %s', paste(periods.best, collapse = ', '), holding.period.best))
print(sprintf('Sharpe = %s', sharpe.best))
}
repeat {
holding.period.temp <- sample(1:100, 1)#sample(1:max.value, 1)
periods.temp <- c(79, 1449, 1603) #sort(c(sample(1:max.value, 1), sample(1:max.value, 1), sample(1:max.value, 1)))
pnl.full <- base.strategy(periods = periods.temp, holding.period = holding.period.temp)
loockback.indent <- max(periods.temp) + 2
pnl.lookback <- pnl.full[loockback.indent:length(pnl.full)]
sharpe <- sharpe_fun(pnl.lookback)
print(sharpe)
if (sharpe >= 1 || is.na(sharpe)) {
print(sprintf('Periods = %s, holding.period = %s', paste(periods.temp, collapse = ', '), holding.period.temp))
print(sprintf('Sharpe = %s', sharpe))
break
}
}
repeat {
holding.period.temp <- 66#sample(1:max.value, 1)
periods.temp <- sort(c(sample(1:max.value, 1), sample(1:max.value, 1), sample(1:max.value, 1)))
pnl.full <- base.strategy(periods = periods.temp, holding.period = holding.period.temp)
loockback.indent <- max(periods.temp) + 2
pnl.lookback <- pnl.full[loockback.indent:length(pnl.full)]
sharpe <- sharpe_fun(pnl.lookback)
print(sharpe)
if (sharpe >= 1 || is.na(sharpe)) {
print(sprintf('Periods = %s, holding.period = %s', paste(periods.temp, collapse = ', '), holding.period.temp))
print(sprintf('Sharpe = %s', sharpe))
break
}
}
repeat {
holding.period.temp <- 66#sample(1:max.value, 1)
periods.temp <- sort(c(sample(1:max.value, 1), sample(1:max.value, 1), sample(1:max.value, 1)))
pnl.full <- base.strategy(periods = periods.temp, holding.period = holding.period.temp)
loockback.indent <- max(periods.temp) + 2
pnl.lookback <- pnl.full[loockback.indent:length(pnl.full)]
sharpe <- sharpe_fun(pnl.lookback)
print(sharpe)
if (sharpe >= 1 || is.na(sharpe)) {
print(sprintf('Periods = %s, holding.period = %s', paste(periods.temp, collapse = ', '), holding.period.temp))
print(sprintf('Sharpe = %s', sharpe))
break
}
}
max.value <- floor(dim(backtest.data)[1] * 0.4)
repeat {
holding.period.temp <- 66#sample(1:max.value, 1)
periods.temp <- sort(c(sample(1:max.value, 1), sample(1:max.value, 1), sample(1:max.value, 1)))
pnl.full <- base.strategy(periods = periods.temp, holding.period = holding.period.temp)
loockback.indent <- max(periods.temp) + 2
pnl.lookback <- pnl.full[loockback.indent:length(pnl.full)]
sharpe <- sharpe_fun(pnl.lookback)
print(sharpe)
if (sharpe >= 1 || is.na(sharpe)) {
print(sprintf('Periods = %s, holding.period = %s', paste(periods.temp, collapse = ', '), holding.period.temp))
print(sprintf('Sharpe = %s', sharpe))
break
}
}
max.value <- floor(dim(backtest.data)[1] * 0.2)
repeat {
holding.period.temp <- 66#sample(1:max.value, 1)
periods.temp <- sort(c(sample(1:max.value, 1), sample(1:max.value, 1), sample(1:max.value, 1)))
pnl.full <- base.strategy(periods = periods.temp, holding.period = holding.period.temp)
loockback.indent <- max(periods.temp) + 2
pnl.lookback <- pnl.full[loockback.indent:length(pnl.full)]
sharpe <- sharpe_fun(pnl.lookback)
print(sharpe)
if (sharpe >= 1 || is.na(sharpe)) {
print(sprintf('Periods = %s, holding.period = %s', paste(periods.temp, collapse = ', '), holding.period.temp))
print(sprintf('Sharpe = %s', sharpe))
break
}
}
max.value <- floor(dim(backtest.data)[1] * 0.2)
repeat {
holding.period.temp <- sample(1:max.value, 1)
periods.temp <- sort(c(sample(1:max.value, 1), sample(1:max.value, 1), sample(1:max.value, 1)))
pnl.full <- base.strategy(periods = periods.temp, holding.period = holding.period.temp)
loockback.indent <- max(periods.temp) + 2
pnl.lookback <- pnl.full[loockback.indent:length(pnl.full)]
sharpe <- sharpe_fun(pnl.lookback)
print(sharpe)
if (sharpe >= 1 || is.na(sharpe)) {
print(sprintf('Periods = %s, holding.period = %s', paste(periods.temp, collapse = ', '), holding.period.temp))
print(sprintf('Sharpe = %s', sharpe))
break
}
}
{
periods.best <-  c(461, 1072, 1780)
holding.period.best <- 66
pnl.best <- base.strategy(periods = periods.best, holding.period = holding.period.best)
sharpe.best <- sharpe_fun(pnl.best[(max(periods.best) + 2):length(pnl.best)])
nav.best <- portfolio.value(money, pnl.best)[(max(periods.best) + 2):length(pnl.best)]
plot(nav.best, type = 'l')
print(sprintf('Periods = %s, holding.period = %s', paste(periods.best, collapse = ', '), holding.period.best))
print(sprintf('Sharpe = %s', sharpe.best))
}
base.strategy.while.loop <- function(day, start.trade.day, lookback, periods, holding.period, use.new_fun = FALSE) {
pnl_inc_leg <- matrix(0L, nrow = nrow(backtest.data), ncol = ncol(backtest.data))
pnl_inc_leg <- set_colnames(pnl_inc_leg, stocks)
assets.count <- numeric(ncol(backtest.data))
yesterday.assets.count <- numeric(ncol(backtest.data))
trade.day <- day + start.trade.day
while (day <= nrow(backtest.data)) {
# Изменение в каждой позиции * Цена позиции (за прошлый день - операция была совершена вчера)
# * Торговые издержки
costs <- abs(assets.count - yesterday.assets.count) * backtest.data[day - 1,] * com
pnl_inc_leg[day,] <- (assets.count  * (backtest.data[day,] - backtest.data[day - 1,])) - costs
if (day < trade.day) {
day <- day + 1
next
}
range <- (day - lookback):day
if (use.new_fun) {
cur.weights <- getWeights_2(backtest.data[range, ], periods)
} else {
cur.weights <- getWeights(backtest.data[range, ], periods)
}
yesterday.assets.count <- assets.count
assets.count <- floor(money * cur.weights / backtest.data[day, ]
# корректируем количество активов, которые мы можем приобрести
# из-за появления торговых издержек
/ (1 + com))
day <- day + 1
trade.day <- trade.day + holding.period
}
pnl_inc <- rowSums(pnl_inc_leg)
return(pnl_inc)
}
base.strategy <- function(periods, holding.period) {
lookback <- max(periods)
day <- lookback + 1
# Проводим бек-тестирование для каждого дня для того, чтобы убрать погрещность holding.period
pnl_inc_leg.full <- lapply(0:(holding.period - 1), function(start.day) {
pnl_inc_leg.batch <- base.strategy.while.loop(
day = day
, start.trade.day = start.day
, lookback = lookback
, periods = periods
, holding.period = holding.period
)
})
pnl_inc_leg.full <- do.call(cbind, pnl_inc_leg.full)
pnl_inc_leg.mean <- apply(pnl_inc_leg.full, 1, mean)
return(pnl_inc_leg.mean)
}
portfolio.value <- function(money, pnl) {
return(money + cumsum(pnl))
}
plot(portfolio.value(money, base.strategy(periods, holding.period)), type = 'l')
base.strategy <- function(periods, holding.period, use.new_fun = FALSE) {
lookback <- max(periods)
day <- lookback + 1
# Проводим бек-тестирование для каждого дня для того, чтобы убрать погрещность holding.period
pnl_inc_leg.full <- lapply(0:(holding.period - 1), function(start.day) {
pnl_inc_leg.batch <- base.strategy.while.loop(
day = day
, start.trade.day = start.day
, lookback = lookback
, periods = periods
, holding.period = holding.period
, use.new_fun = use.new_fun
)
})
pnl_inc_leg.full <- do.call(cbind, pnl_inc_leg.full)
pnl_inc_leg.mean <- apply(pnl_inc_leg.full, 1, mean)
return(pnl_inc_leg.mean)
}
portfolio.value <- function(money, pnl) {
return(money + cumsum(pnl))
}
plot(portfolio.value(money, base.strategy(periods, holding.period)), type = 'l')
plot(portfolio.value(money, base.strategy(periods, holding.period, use.new_fun = TRUE)), type = 'l')
plot(portfolio.value(money, base.strategy(periods, holding.period)), type = 'l')
max.value <- floor(dim(backtest.data)[1] * 0.2)
repeat {
holding.period.temp <- sample(1:max.value, 1)
periods.temp <- sort(sample(1:max.value, 5))
#c(sample(1:max.value, 1), sample(1:max.value, 1), sample(1:max.value, 1)))
pnl.full <- base.strategy(periods = periods.temp, holding.period = holding.period.temp, use.new_fun = TRUE)
loockback.indent <- max(periods.temp) + 2
pnl.lookback <- pnl.full[loockback.indent:length(pnl.full)]
sharpe <- sharpe_fun(pnl.lookback)
print(sharpe)
if (sharpe >= 1 || is.na(sharpe)) {
print(sprintf('Periods = %s, holding.period = %s', paste(periods.temp, collapse = ', '), holding.period.temp))
print(sprintf('Sharpe = %s', sharpe))
break
}
}
repeat {
holding.period.temp <- sample(1:max.value, 1)
periods.temp <- sort(sample(1:max.value, 5))
#c(sample(1:max.value, 1), sample(1:max.value, 1), sample(1:max.value, 1)))
pnl.full <- base.strategy(periods = periods.temp, holding.period = holding.period.temp, use.new_fun = TRUE)
loockback.indent <- max(periods.temp) + 2
pnl.lookback <- pnl.full[loockback.indent:length(pnl.full)]
sharpe <- sharpe_fun(pnl.lookback)
print(paste(periods.temp, collapse = ', '))
print(holding.period.temp)
print(sharpe)
if (sharpe >= 1 || is.na(sharpe)) {
print(sprintf('Periods = %s, holding.period = %s', paste(periods.temp, collapse = ', '), holding.period.temp))
print(sprintf('Sharpe = %s', sharpe))
break
}
}
repeat {
holding.period.temp <- sample(1:max.value, 1)
periods.temp <- sort(sample(1:max.value, sample(1:10, 1)))
#c(sample(1:max.value, 1), sample(1:max.value, 1), sample(1:max.value, 1)))
pnl.full <- base.strategy(periods = periods.temp, holding.period = holding.period.temp, use.new_fun = TRUE)
loockback.indent <- max(periods.temp) + 2
pnl.lookback <- pnl.full[loockback.indent:length(pnl.full)]
sharpe <- sharpe_fun(pnl.lookback)
print(paste(periods.temp, collapse = ', '))
print(holding.period.temp)
print(sharpe)
if (sharpe >= 1 || is.na(sharpe)) {
print(sprintf('Periods = %s, holding.period = %s', paste(periods.temp, collapse = ', '), holding.period.temp))
print(sprintf('Sharpe = %s', sharpe))
break
}
}
repeat {
holding.period.temp <- 21#sample(1:max.value, 1)
periods.temp <- sort(sample(1:max.value, sample(1:10, 1)))
#c(sample(1:max.value, 1), sample(1:max.value, 1), sample(1:max.value, 1)))
pnl.full <- base.strategy(periods = periods.temp, holding.period = holding.period.temp, use.new_fun = TRUE)
loockback.indent <- max(periods.temp) + 2
pnl.lookback <- pnl.full[loockback.indent:length(pnl.full)]
sharpe <- sharpe_fun(pnl.lookback)
print(paste(periods.temp, collapse = ', '))
print(holding.period.temp)
print(sharpe)
if (sharpe >= 1 || is.na(sharpe)) {
print(sprintf('Periods = %s, holding.period = %s', paste(periods.temp, collapse = ', '), holding.period.temp))
print(sprintf('Sharpe = %s', sharpe))
break
}
}
repeat {
holding.period.temp <- sample(1:100, 1)#sample(1:max.value, 1)
periods.temp <- sort(sample(1:max.value, sample(1:10, 1)))
#c(sample(1:max.value, 1), sample(1:max.value, 1), sample(1:max.value, 1)))
pnl.full <- base.strategy(periods = periods.temp, holding.period = holding.period.temp, use.new_fun = TRUE)
loockback.indent <- max(periods.temp) + 2
pnl.lookback <- pnl.full[loockback.indent:length(pnl.full)]
sharpe <- sharpe_fun(pnl.lookback)
print(paste(periods.temp, collapse = ', '))
print(holding.period.temp)
print(sharpe)
if (sharpe >= 1 || is.na(sharpe)) {
print(sprintf('Periods = %s, holding.period = %s', paste(periods.temp, collapse = ', '), holding.period.temp))
print(sprintf('Sharpe = %s', sharpe))
break
}
}
# Переопределяю функцию подбора весов
getWeights_2 <- function(data, periods) {
backtest.data.by.stock <- lapply(1:dim(data)[2], function(stock) {
stock.batch.data <- lapply(periods, function(period) {
period.batch.data <- data[, stock]
period.batch.lenght <- length(period.batch.data)
period.batch <- (period.batch.data[period.batch.lenght] / period.batch.data[period.batch.lenght - period]) - 1
return(period.batch)
})
stock.batch.data <- do.call(cbind, stock.batch.data)
stock.batch <- apply(stock.batch.data, 1, mean)
return(stock.batch)
})
backtest.data.by.stock <- do.call(cbind, backtest.data.by.stock)
backtest.data.by.stock <- set_colnames(backtest.data.by.stock, stocks)
# Если есть активы с положительной доходностью
# Выбираем актив с максимальной доходностью
if (length(backtest.data.by.stock[backtest.data.by.stock > 0]) > 0) {
result <- ifelse(1:length(stocks) %in% which(backtest.data.by.stock > 0), 1, 0)
result <- result / length(result[result == 1])
} else result <- c(0, 0, 0)
#else if ((backtest.data.by.stock[, 'IWM'] < 0) & (backtest.data.by.stock[, 'SPY'] < 0)) {
#  result <- c(0, 0, 1)
#} else if (backtest.data.by.stock[, 'SPY'] < backtest.data.by.stock[, 'IWM']) {
#  result <- c(1, 0, 0)
#} else {
#  result <- c(0, 1, 0)
#}
return(result)
}
max.value <- floor(dim(backtest.data)[1] * 0.2)
repeat {
holding.period.temp <- sample(1:100, 1)#sample(1:max.value, 1)
periods.temp <- sort(sample(1:max.value, sample(1:10, 1)))
#c(sample(1:max.value, 1), sample(1:max.value, 1), sample(1:max.value, 1)))
pnl.full <- base.strategy(periods = periods.temp, holding.period = holding.period.temp, use.new_fun = TRUE)
loockback.indent <- max(periods.temp) + 2
pnl.lookback <- pnl.full[loockback.indent:length(pnl.full)]
sharpe <- sharpe_fun(pnl.lookback)
print(paste(periods.temp, collapse = ', '))
print(holding.period.temp)
print(sharpe)
if (sharpe >= 1 || is.na(sharpe)) {
print(sprintf('Periods = %s, holding.period = %s', paste(periods.temp, collapse = ', '), holding.period.temp))
print(sprintf('Sharpe = %s', sharpe))
break
}
}
max.value <- floor(dim(backtest.data)[1] * 0.05)
repeat {
holding.period.temp <- sample(1:100, 1)#sample(1:max.value, 1)
periods.temp <- sort(sample(1:max.value, sample(1:10, 1)))
#c(sample(1:max.value, 1), sample(1:max.value, 1), sample(1:max.value, 1)))
pnl.full <- base.strategy(periods = periods.temp, holding.period = holding.period.temp, use.new_fun = TRUE)
loockback.indent <- max(periods.temp) + 2
pnl.lookback <- pnl.full[loockback.indent:length(pnl.full)]
sharpe <- sharpe_fun(pnl.lookback)
print(paste(periods.temp, collapse = ', '))
print(holding.period.temp)
print(sharpe)
if (sharpe >= 1 || is.na(sharpe)) {
print(sprintf('Periods = %s, holding.period = %s', paste(periods.temp, collapse = ', '), holding.period.temp))
print(sprintf('Sharpe = %s', sharpe))
break
}
}
